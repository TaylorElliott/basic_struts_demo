<!DOCTYPE struts PUBLIC
"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
"http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
    <constant name="struts.action.extension" value=","/>
    <constant name="struts.custom.i18n.resources" value="ApplicationResources" />
    <constant name="struts.devMode" value="false" />     
    <constant name="struts.ui.theme" value="css_xhtml" />
    <!-- Max file upload size constant = 15MB -->
    <constant name="struts.multipart.maxSize" value="15728640" />
    
    <!-- Configuration for the default package. -->
    <package name="default" extends="struts-default, json-default">
        
        <interceptors>
            <interceptor name="firstInterceptor"
                         class="ca.queensu.websvcs.workshopbooking.client.interceptor.FirstInterceptor" />
            
            <interceptor name="secondInterceptor"
                         class="ca.queensu.websvcs.workshopbooking.client.interceptor.SecondInterceptor" />
            
            <!-- This is the baseStack. Use this if your action does NOT need authentication or validation -->
            <interceptor-stack name="baseStack">
                <interceptor-ref name="exception"></interceptor-ref>
                <interceptor-ref name="alias"></interceptor-ref>
                <interceptor-ref name="i18n"></interceptor-ref>
                <interceptor-ref name="servletConfig"></interceptor-ref>
                <interceptor-ref name="prepare"></interceptor-ref>
                <interceptor-ref name="chain"></interceptor-ref>
                <interceptor-ref name="scopedModelDriven"></interceptor-ref>
                <interceptor-ref name="modelDriven"></interceptor-ref>
                <interceptor-ref name="fileUpload"></interceptor-ref>
                <interceptor-ref name="checkbox"></interceptor-ref>
                <interceptor-ref name="multiselect"></interceptor-ref>
                <interceptor-ref name="staticParams"></interceptor-ref>
                <interceptor-ref name="actionMappingParams"></interceptor-ref>
                <interceptor-ref name="params"></interceptor-ref>
                <interceptor-ref name="conversionError"></interceptor-ref>
                <interceptor-ref name="debugging"></interceptor-ref>
            </interceptor-stack>
            
            <!-- Example Stack -->
            <interceptor-stack name="exampleStack">
                <interceptor-ref name="baseStack"></interceptor-ref>
                <interceptor-ref name="firstInterceptor"></interceptor-ref>
                <interceptor-ref name="secondInterceptor"></interceptor-ref>
            </interceptor-stack>
            
            <!-- This is the baseValidationStack. Use this if your action needs everything in the baseStack, plus validation -->
            <interceptor-stack name="baseValidationStack">
                <interceptor-ref name="baseStack"></interceptor-ref>
                <interceptor-ref name="validation"></interceptor-ref>
                <interceptor-ref name="workflow"></interceptor-ref>
            </interceptor-stack>
            
        </interceptors>
        
        <global-results>
            <result name="error">/WEB-INF/jsp/errors.jsp</result>
        </global-results>
        
        <global-exception-mappings>
            <exception-mapping exception="java.lang.NullPointerException"  result="error" />
            <exception-mapping exception="java.lang.Exception" result="error"></exception-mapping>
            <exception-mapping exception="java.lang.ArrayIndexOutOfBoundsException" result="error"></exception-mapping>
        </global-exception-mappings>
 
        <!-- default action. This is the entrance point for the application -->
        <action name="" class="ca.queensu.websvcs.workshopbooking.client.action.DashboardAction" method="execute">
            <interceptor-ref name="exampleStack"></interceptor-ref>                      
            <result name="success">/WEB-INF/jsp/client/dashboard.jsp</result>
        </action>
        
        <!-- dashboard action (Same as the above default action) -->
        <action name="dashboardAction" class="ca.queensu.websvcs.workshopbooking.client.action.DashboardAction" method="execute">
            <interceptor-ref name="exampleStack"></interceptor-ref>                      
            <result name="success">/WEB-INF/jsp/client/dashboard.jsp</result>
        </action>
        
        <!-- student home screen action -->
        <action name="studentHomeLoadAction" class="ca.queensu.websvcs.workshopbooking.client.action.StudentHomeAction" method="execute">
            <interceptor-ref name="baseStack"></interceptor-ref>                      
            <result name="success">/WEB-INF/jsp/client/studenthome.jsp</result>
        </action>
        
        <!-- action for loading the student edit screen  -->
        <action name="studentEditLoadAction" class="ca.queensu.websvcs.workshopbooking.client.action.StudentEditAction" method="load">
            <interceptor-ref name="baseStack"></interceptor-ref>                      
            <result name="success">/WEB-INF/jsp/client/studentedit.jsp</result>
        </action>
        
        <!-- action for saving/editing data on the student edit screen  -->
        <action name="studentEditExeAction" class="ca.queensu.websvcs.workshopbooking.client.action.StudentEditAction" method="execute">
            <interceptor-ref name="baseValidationStack"></interceptor-ref>
            <!-- This "input" result is what struts will render if any validation errors are found in the "validate" method of the StudentEditAction java class -->
            <result name="input">/WEB-INF/jsp/client/studentedit.jsp</result>
            <result name="success">/WEB-INF/jsp/client/studentedit.jsp</result>
        </action>
        
    </package>
</struts>
